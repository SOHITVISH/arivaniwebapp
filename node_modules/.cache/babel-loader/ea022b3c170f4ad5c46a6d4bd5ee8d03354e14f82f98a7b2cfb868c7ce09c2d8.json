{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arivani 1\\\\Desktop\\\\Ari\\\\arivani\\\\myapp\\\\src\\\\ui\\\\Community.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Form, Card, Badge } from 'react-bootstrap';\nimport { BsHeartFill, BsEyeFill, BsPlusCircleFill, BsTrashFill } from 'react-icons/bs';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommunityPage = () => {\n  _s();\n  const [questions, setQuestions] = useState(() => {\n    const storedQuestions = localStorage.getItem('communityQuestions');\n    return storedQuestions ? JSON.parse(storedQuestions) : [{\n      id: 1,\n      question: \"How to install React Bootstrap?\",\n      likes: 10,\n      views: 5,\n      answers: []\n    }, {\n      id: 2,\n      question: \"What are the benefits of using React?\",\n      likes: 15,\n      views: 8,\n      answers: []\n    }, {\n      id: 3,\n      question: \"What are the benefits of using React?\",\n      likes: 15,\n      views: 8,\n      answers: []\n    }, {\n      id: 4,\n      question: \"How to implement sorting in React?\",\n      likes: 8,\n      views: 3,\n      answers: []\n    }];\n  });\n  const [newAnswer, setNewAnswer] = useState('');\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('communityQuestions', JSON.stringify(questions));\n  }, [questions]);\n  const handleAnswerSubmit = () => {\n    if (newAnswer.trim() !== '' && selectedQuestionId) {\n      const updatedQuestions = questions.map(question => {\n        if (question.id === selectedQuestionId) {\n          return {\n            ...question,\n            answers: [...question.answers, {\n              id: Date.now(),\n              text: newAnswer\n            }]\n          };\n        }\n        return question;\n      });\n      setQuestions(updatedQuestions);\n      setNewAnswer('');\n      setSelectedQuestionId(null);\n    }\n  };\n  const handleLike = questionId => {\n    const updatedQuestions = questions.map(question => {\n      if (question.id === questionId) {\n        return {\n          ...question,\n          likes: question.likes + 1\n        };\n      }\n      return question;\n    });\n    setQuestions(updatedQuestions);\n  };\n  const handleAnswerDelete = (questionId, answerId) => {\n    const updatedQuestions = questions.map(question => {\n      if (question.id === questionId) {\n        return {\n          ...question,\n          answers: question.answers.filter(answer => answer.id !== answerId)\n        };\n      }\n      return question;\n    });\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4 community-container\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center mb-4 display-4 community-title\",\n            children: \"Community Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4 question-card\",\n            style: {\n              border: 'none',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"question-title\",\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"question-meta\",\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  className: \"me-2\",\n                  onClick: () => handleLike(question.id),\n                  children: [/*#__PURE__*/_jsxDEV(BsHeartFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this), \" \", question.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"info\",\n                  children: [/*#__PURE__*/_jsxDEV(BsEyeFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this), \" \", question.views]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), selectedQuestionId === question.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Your Answer...\",\n                    value: newAnswer,\n                    onChange: e => setNewAnswer(e.target.value),\n                    className: \"answer-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: handleAnswerSubmit,\n                  className: \"answer-submit-btn\",\n                  children: \"Submit Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                onClick: () => setSelectedQuestionId(question.id),\n                className: \"answer-btn\",\n                children: [/*#__PURE__*/_jsxDEV(BsPlusCircleFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this), \" Answer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Answers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), question.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"flex-grow-1\",\n                  children: answer.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleAnswerDelete(question.id, answer.id),\n                  children: /*#__PURE__*/_jsxDEV(BsTrashFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this)]\n              }, answer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CommunityPage, \"qjXf5Ss9FMzSTn+AdTV7lKDAMxE=\");\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","Form","Card","Badge","BsHeartFill","BsEyeFill","BsPlusCircleFill","BsTrashFill","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","CommunityPage","_s","questions","setQuestions","storedQuestions","localStorage","getItem","JSON","parse","id","question","likes","views","answers","newAnswer","setNewAnswer","selectedQuestionId","setSelectedQuestionId","setItem","stringify","handleAnswerSubmit","trim","updatedQuestions","map","Date","now","text","handleLike","questionId","handleAnswerDelete","answerId","filter","answer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","md","lg","style","border","boxShadow","Body","Title","Text","bg","onClick","Group","Control","type","placeholder","value","onChange","e","target","variant","index","size","_c","$RefreshReg$"],"sources":["C:/Users/Arivani 1/Desktop/Ari/arivani/myapp/src/ui/Community.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Form, Card, Badge } from 'react-bootstrap';\r\nimport { BsHeartFill, BsEyeFill, BsPlusCircleFill, BsTrashFill } from 'react-icons/bs';\r\nimport Footer from '../components/Footer';\r\n\r\nconst CommunityPage = () => {\r\n  const [questions, setQuestions] = useState(() => {\r\n    const storedQuestions = localStorage.getItem('communityQuestions');\r\n    return storedQuestions ? JSON.parse(storedQuestions) : [\r\n      { id: 1, question: \"How to install React Bootstrap?\", likes: 10, views: 5, answers: [] },\r\n      { id: 2, question: \"What are the benefits of using React?\", likes: 15, views: 8, answers: [] },\r\n      { id: 3, question: \"What are the benefits of using React?\", likes: 15, views: 8, answers: [] },\r\n      { id: 4, question: \"How to implement sorting in React?\", likes: 8, views: 3, answers: [] }\r\n    ];\r\n  });\r\n  const [newAnswer, setNewAnswer] = useState('');\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('communityQuestions', JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n  const handleAnswerSubmit = () => {\r\n    if (newAnswer.trim() !== '' && selectedQuestionId) {\r\n      const updatedQuestions = questions.map(question => {\r\n        if (question.id === selectedQuestionId) {\r\n          return {\r\n            ...question,\r\n            answers: [...question.answers, { id: Date.now(), text: newAnswer }]\r\n          };\r\n        }\r\n        return question;\r\n      });\r\n      setQuestions(updatedQuestions);\r\n      setNewAnswer('');\r\n      setSelectedQuestionId(null);\r\n    }\r\n  };\r\n\r\n  const handleLike = (questionId) => {\r\n    const updatedQuestions = questions.map(question => {\r\n      if (question.id === questionId) {\r\n        return {\r\n          ...question,\r\n          likes: question.likes + 1\r\n        };\r\n      }\r\n      return question;\r\n    });\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleAnswerDelete = (questionId, answerId) => {\r\n    const updatedQuestions = questions.map(question => {\r\n      if (question.id === questionId) {\r\n        return {\r\n          ...question,\r\n          answers: question.answers.filter(answer => answer.id !== answerId)\r\n        };\r\n      }\r\n      return question;\r\n    });\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-4 community-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"text-center mb-4 display-4 community-title\">Community Page</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {questions.map(question => (\r\n            <Col key={question.id} md={6} lg={4}>\r\n              <Card className=\"mb-4 question-card\" style={{ border: 'none', boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)' }}>\r\n                <Card.Body>\r\n                  <Card.Title className=\"question-title\">{question.question}</Card.Title>\r\n                  <Card.Text className=\"question-meta\">\r\n                    <Badge bg=\"primary\" className=\"me-2\" onClick={() => handleLike(question.id)}>\r\n                      <BsHeartFill /> {question.likes}\r\n                    </Badge>\r\n                    <Badge bg=\"info\">\r\n                      <BsEyeFill /> {question.views}\r\n                    </Badge>\r\n                  </Card.Text>\r\n                  {selectedQuestionId === question.id ? (\r\n                    <>\r\n                      <Form.Group>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Your Answer...\"\r\n                          value={newAnswer}\r\n                          onChange={(e) => setNewAnswer(e.target.value)}\r\n                          className=\"answer-input\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Button variant=\"primary\" onClick={handleAnswerSubmit} className=\"answer-submit-btn\">\r\n                        Submit Answer\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"outline-primary\"\r\n                      onClick={() => setSelectedQuestionId(question.id)}\r\n                      className=\"answer-btn\"\r\n                    >\r\n                      <BsPlusCircleFill /> Answer\r\n                    </Button>\r\n                  )}\r\n                  <hr />\r\n                  <h5>Answers:</h5>\r\n                  {question.answers.map((answer, index) => (\r\n                    <div key={answer.id} className=\"d-flex align-items-center\">\r\n                      <p className=\"flex-grow-1\">{answer.text}</p>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleAnswerDelete(question.id, answer.id)}\r\n                      >\r\n                        <BsTrashFill />\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommunityPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}