{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arivani 1\\\\Desktop\\\\Ari\\\\arivani\\\\myapp\\\\src\\\\ui\\\\Community.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Button, Form, Card, Badge, Modal } from 'react-bootstrap';\nimport { BsHeartFill, BsEyeFill, BsPlusCircleFill, BsTrashFill } from 'react-icons/bs';\nimport Footer from '../components/Footer';\nimport InnerHeaderBanner from '../components/InnerHeaderBanner';\nimport InnerHeader from '../components/InnerHeader';\nimport contactHeader from '../img/contact-header.jpg';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommunityPage = () => {\n  _s();\n  const formRef = useRef();\n  const usernameRef = useRef(null);\n  const emailRef = useRef(null);\n  const subjectRef = useRef(null);\n  const messageRef = useRef(null);\n  const [questions, setQuestions] = useState(() => {\n    const storedQuestions = localStorage.getItem('communityQuestions');\n    return storedQuestions ? JSON.parse(storedQuestions) : [{\n      id: 1,\n      question: \"How to install React Bootstrap?\",\n      likes: 10,\n      views: 5,\n      answers: []\n    }, {\n      id: 2,\n      question: \"What are the benefits of using React?\",\n      likes: 15,\n      views: 8,\n      answers: []\n    }, {\n      id: 3,\n      question: \"How to implement sorting in React?\",\n      likes: 8,\n      views: 3,\n      answers: []\n    }];\n  });\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  /*   const [inputFields, setInputFields] = useState({\r\n      username: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n    }); */\n\n  const [errors, setErrors] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    localStorage.setItem('communityQuestions', JSON.stringify(questions));\n  }, [questions]);\n  const validateValues = inputValues => {\n    let errors = {};\n\n    // if (inputValues.username.length < 3) {\n    //   errors.username = \"Username is too short\";\n    // }\n    // if (inputValues.email.length < 5) {\n    //   errors.email = \"Email is too short\";\n    // }\n    // if (inputValues.subject.length < 5) {\n    //   errors.subject = \"Subject is too short\";\n    // }\n    // if (inputValues.message.length < 10) {\n    //   errors.message = \"Message is too short\";\n    // }\n\n    return errors;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setErrors(validateValues({\n      name,\n      email,\n      subject,\n      message\n    }));\n    setSubmitting(true);\n    try {\n      console.log(\"inside api\");\n      const response = await axios.post('http://localhost:5000/api/createcontact', {\n        name,\n        email,\n        subject,\n        message\n      });\n      console.log(response, \"__________________________hiii\");\n      console.log('Contact form submitted successfully:', response.data);\n      setSuccess(true);\n      // Clear input values after successful submission\n      setName(\"\");\n      setEmail(\"\");\n      setSubject(\"\");\n      setMessage(\"\");\n    } catch (error) {\n      console.error('Error submitting contact form:', error);\n    }\n  };\n  const handleAnswerSubmit = () => {\n    if (newAnswer.trim() !== '' && selectedQuestionId) {\n      const updatedQuestions = questions.map(question => {\n        if (question.id === selectedQuestionId) {\n          return {\n            ...question,\n            answers: [...question.answers, {\n              id: Date.now(),\n              text: newAnswer\n            }]\n          };\n        }\n        return question;\n      });\n      setQuestions(updatedQuestions);\n      setNewAnswer('');\n      setSelectedQuestionId(null);\n    }\n  };\n  const handleLike = questionId => {\n    const updatedQuestions = questions.map(question => {\n      if (question.id === questionId) {\n        return {\n          ...question,\n          likes: question.likes + 1\n        };\n      }\n      return question;\n    });\n    setQuestions(updatedQuestions);\n  };\n  const handleAnswerDelete = (questionId, answerId) => {\n    const updatedQuestions = questions.map(question => {\n      if (question.id === questionId) {\n        return {\n          ...question,\n          answers: question.answers.filter(answer => answer.id !== answerId)\n        };\n      }\n      return question;\n    });\n    setQuestions(updatedQuestions);\n  };\n  const handleQuestionDelete = questionId => {\n    const updatedQuestions = questions.filter(question => question.id !== questionId);\n    setQuestions(updatedQuestions);\n  };\n  const handleNewQuestionSubmit = () => {\n    if (newQuestion.trim() !== '') {\n      const newId = questions.length + 1;\n      const newQuestionObj = {\n        id: newId,\n        question: newQuestion,\n        likes: 0,\n        views: 0,\n        answers: []\n      };\n      setQuestions([...questions, newQuestionObj]);\n      setNewQuestion('');\n      setShowModal(false);\n    }\n  };\n  const animateOnHover = () => {\n    gsap.to('.animate-me', {\n      scale: 1.1,\n      duration: 0.3\n    });\n  };\n  const resetAnimation = () => {\n    gsap.to('.animate-me', {\n      scale: 1,\n      duration: 0.3\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InnerHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InnerHeaderBanner, {\n      name: \"Community\",\n      img: contactHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 10,\n          lg: 8,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowModal(true),\n            className: \"mb-3\",\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: showModal,\n            onHide: () => setShowModal(false),\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Add New Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newQuestion\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Your Question:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: newQuestion,\n                  onChange: e => setNewQuestion(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => setShowModal(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleNewQuestionSubmit,\n                children: \"Add Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), questions.map(question => /*#__PURE__*/_jsxDEV(StyledCard, {\n            md: 6,\n            lg: 4,\n            className: \"mb-4 animate-me\",\n            onMouseEnter: animateOnHover,\n            onMouseLeave: resetAnimation,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"question-title\",\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"question-meta\",\n                children: [/*#__PURE__*/_jsxDEV(StyledBadge, {\n                  bg: \"primary\",\n                  onClick: () => handleLike(question.id),\n                  children: [/*#__PURE__*/_jsxDEV(BsHeartFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 23\n                  }, this), \" \", question.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"info\",\n                  children: [/*#__PURE__*/_jsxDEV(BsEyeFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this), \" \", question.views]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Answers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), question.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"flex-grow-1\",\n                  children: answer.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleAnswerDelete(question.id, answer.id),\n                  children: /*#__PURE__*/_jsxDEV(BsTrashFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this)]\n              }, answer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                size: \"sm\",\n                className: \"delete-question-btn\",\n                onClick: () => handleQuestionDelete(question.id),\n                children: \"Delete Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CommunityPage, \"3mHzw00dbaMwnHCc4ZULT/1QXAI=\");\n_c = CommunityPage;\nconst StyledCard = styled(Card)`\n  border: none;\n  box-shadow: ${({\n  selected\n}) => selected ? '0 5px 15px rgba(0, 0, 0, 0.1)' : '0 2px 4px rgba(0, 0, 0, 0.1)'};\n  transition: box-shadow 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n  }\n\n  .delete-question-btn {\n    margin-top: 10px;\n    width: 100%;\n    display: block;\n  }\n`;\n_c2 = StyledCard;\nconst StyledBadge = styled(Badge)`\n  cursor: pointer;\n`;\n_c3 = StyledBadge;\nexport default CommunityPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CommunityPage\");\n$RefreshReg$(_c2, \"StyledCard\");\n$RefreshReg$(_c3, \"StyledBadge\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","Button","Form","Card","Badge","Modal","BsHeartFill","BsEyeFill","BsPlusCircleFill","BsTrashFill","Footer","InnerHeaderBanner","InnerHeader","contactHeader","axios","styled","gsap","jsxDEV","_jsxDEV","Fragment","_Fragment","CommunityPage","_s","formRef","usernameRef","emailRef","subjectRef","messageRef","questions","setQuestions","storedQuestions","localStorage","getItem","JSON","parse","id","question","likes","views","answers","newQuestion","setNewQuestion","newAnswer","setNewAnswer","selectedQuestionId","setSelectedQuestionId","showModal","setShowModal","errors","setErrors","submitting","setSubmitting","success","setSuccess","setItem","stringify","validateValues","inputValues","handleSubmit","event","preventDefault","name","email","subject","message","console","log","response","post","data","setName","setEmail","setSubject","setMessage","error","handleAnswerSubmit","trim","updatedQuestions","map","Date","now","text","handleLike","questionId","handleAnswerDelete","answerId","filter","answer","handleQuestionDelete","handleNewQuestionSubmit","newId","length","newQuestionObj","animateOnHover","to","scale","duration","resetAnimation","children","fileName","_jsxFileName","lineNumber","columnNumber","img","fluid","className","xs","md","lg","onClick","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","value","onChange","e","target","variant","StyledCard","onMouseEnter","onMouseLeave","Text","StyledBadge","bg","index","size","_c","selected","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/Arivani 1/Desktop/Ari/arivani/myapp/src/ui/Community.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Container, Row, Col, Button, Form, Card, Badge, Modal } from 'react-bootstrap';\r\nimport { BsHeartFill, BsEyeFill, BsPlusCircleFill, BsTrashFill } from 'react-icons/bs';\r\nimport Footer from '../components/Footer';\r\nimport InnerHeaderBanner from '../components/InnerHeaderBanner';\r\nimport InnerHeader from '../components/InnerHeader';\r\nimport contactHeader from '../img/contact-header.jpg';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { gsap } from 'gsap';\r\n\r\nconst CommunityPage = () => {\r\n  const formRef = useRef();\r\n  const usernameRef = useRef(null);\r\n  const emailRef = useRef(null);\r\n  const subjectRef = useRef(null);\r\n  const messageRef = useRef(null);\r\n\r\n  const [questions, setQuestions] = useState(() => {\r\n    const storedQuestions = localStorage.getItem('communityQuestions');\r\n    return storedQuestions\r\n      ? JSON.parse(storedQuestions)\r\n      : [\r\n          { id: 1, question: \"How to install React Bootstrap?\", likes: 10, views: 5, answers: [] },\r\n          { id: 2, question: \"What are the benefits of using React?\", likes: 15, views: 8, answers: [] },\r\n          { id: 3, question: \"How to implement sorting in React?\", likes: 8, views: 3, answers: [] }\r\n        ];\r\n  });\r\n  const [newQuestion, setNewQuestion] = useState('');\r\n  const [newAnswer, setNewAnswer] = useState('');\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n/*   const [inputFields, setInputFields] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  }); */\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('communityQuestions', JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n  const validateValues = (inputValues) => {\r\n    let errors = {};\r\n\r\n    // if (inputValues.username.length < 3) {\r\n    //   errors.username = \"Username is too short\";\r\n    // }\r\n    // if (inputValues.email.length < 5) {\r\n    //   errors.email = \"Email is too short\";\r\n    // }\r\n    // if (inputValues.subject.length < 5) {\r\n    //   errors.subject = \"Subject is too short\";\r\n    // }\r\n    // if (inputValues.message.length < 10) {\r\n    //   errors.message = \"Message is too short\";\r\n    // }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setErrors(validateValues({ name, email, subject, message }));\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      console.log(\"inside api\");\r\n      const response = await axios.post('http://localhost:5000/api/createcontact', { name, email, subject, message });\r\n      console.log(response, \"__________________________hiii\");\r\n      console.log('Contact form submitted successfully:', response.data);\r\n      setSuccess(true);\r\n      // Clear input values after successful submission\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n      setSubject(\"\");\r\n      setMessage(\"\");\r\n    } catch (error) {\r\n      console.error('Error submitting contact form:', error);\r\n    }\r\n  };\r\n\r\n  const handleAnswerSubmit = () => {\r\n    if (newAnswer.trim() !== '' && selectedQuestionId) {\r\n      const updatedQuestions = questions.map(question => {\r\n        if (question.id === selectedQuestionId) {\r\n          return {\r\n            ...question,\r\n            answers: [...question.answers, { id: Date.now(), text: newAnswer }]\r\n          };\r\n        }\r\n        return question;\r\n      });\r\n      setQuestions(updatedQuestions);\r\n      setNewAnswer('');\r\n      setSelectedQuestionId(null);\r\n    }\r\n  };\r\n\r\n  const handleLike = (questionId) => {\r\n    const updatedQuestions = questions.map(question => {\r\n      if (question.id === questionId) {\r\n        return {\r\n          ...question,\r\n          likes: question.likes + 1\r\n        };\r\n      }\r\n      return question;\r\n    });\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleAnswerDelete = (questionId, answerId) => {\r\n    const updatedQuestions = questions.map(question => {\r\n      if (question.id === questionId) {\r\n        return {\r\n          ...question,\r\n          answers: question.answers.filter(answer => answer.id !== answerId)\r\n        };\r\n      }\r\n      return question;\r\n    });\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleQuestionDelete = (questionId) => {\r\n    const updatedQuestions = questions.filter(question => question.id !== questionId);\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleNewQuestionSubmit = () => {\r\n    if (newQuestion.trim() !== '') {\r\n      const newId = questions.length + 1;\r\n      const newQuestionObj = {\r\n        id: newId,\r\n        question: newQuestion,\r\n        likes: 0,\r\n        views: 0,\r\n        answers: []\r\n      };\r\n      setQuestions([...questions, newQuestionObj]);\r\n      setNewQuestion('');\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const animateOnHover = () => {\r\n    gsap.to('.animate-me', { scale: 1.1, duration: 0.3 });\r\n  };\r\n\r\n  const resetAnimation = () => {\r\n    gsap.to('.animate-me', { scale: 1, duration: 0.3 });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InnerHeader />\r\n      <InnerHeaderBanner name={\"Community\"} img={contactHeader} />\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={12} md={10} lg={8}>\r\n            <Button onClick={() => setShowModal(true)} className=\"mb-3\">\r\n              Add Question\r\n            </Button>\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Add New Question</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"newQuestion\">\r\n                  <Form.Label>Your Question:</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newQuestion}\r\n                    onChange={(e) => setNewQuestion(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleNewQuestionSubmit}>\r\n                  Add Question\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            {questions.map(question => (\r\n              <StyledCard key={question.id} md={6} lg={4} className=\"mb-4 animate-me\" onMouseEnter={animateOnHover} onMouseLeave={resetAnimation}>\r\n                <Card.Body>\r\n                  <Card.Title className=\"question-title\">{question.question}</Card.Title>\r\n                  <Card.Text className=\"question-meta\">\r\n                    <StyledBadge bg=\"primary\" onClick={() => handleLike(question.id)}>\r\n                      <BsHeartFill /> {question.likes}\r\n                    </StyledBadge>\r\n                    <Badge bg=\"info\">\r\n                      <BsEyeFill /> {question.views}\r\n                    </Badge>\r\n                  </Card.Text>\r\n                  <hr />\r\n                  <h5>Answers:</h5>\r\n                  {question.answers.map((answer, index) => (\r\n                    <div key={answer.id} className=\"d-flex align-items-center\">\r\n                      <p className=\"flex-grow-1\">{answer.text}</p>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleAnswerDelete(question.id, answer.id)}\r\n                      >\r\n                        <BsTrashFill />\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    size=\"sm\"\r\n                    className=\"delete-question-btn\"\r\n                    onClick={() => handleQuestionDelete(question.id)}\r\n                  >\r\n                    Delete Question\r\n                  </Button>\r\n                </Card.Body>\r\n              </StyledCard>\r\n            ))}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledCard = styled(Card)`\r\n  border: none;\r\n  box-shadow: ${({ selected }) =>\r\n    selected ? '0 5px 15px rgba(0, 0, 0, 0.1)' : '0 2px 4px rgba(0, 0, 0, 0.1)'};\r\n  transition: box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .delete-question-btn {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst StyledBadge = styled(Badge)`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default CommunityPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}