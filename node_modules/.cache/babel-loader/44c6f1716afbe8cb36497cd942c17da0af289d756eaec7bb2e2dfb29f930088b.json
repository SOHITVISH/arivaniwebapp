{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form, Card, Badge } from 'react-bootstrap';\nimport { BsHeartFill, BsEyeFill } from 'react-icons/bs';\nimport Footer from '../components/Footer';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    question: \"How to install React Bootstrap?\",\n    likes: 10,\n    views: 5,\n    answers: []\n  }, {\n    id: 2,\n    question: \"What are the benefits of using React?\",\n    likes: 15,\n    views: 8,\n    answers: []\n  }, {\n    id: 3,\n    question: \"How to implement sorting in React?\",\n    likes: 8,\n    views: 3,\n    answers: []\n  }]);\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n  const handleQuestionSubmit = () => {\n    if (newQuestion.trim() !== '') {\n      const newQuestionObj = {\n        id: questions.length + 1,\n        question: newQuestion,\n        likes: 0,\n        views: 0,\n        answers: []\n      };\n      setQuestions([...questions, newQuestionObj]);\n      setNewQuestion('');\n    }\n  };\n  const handleAnswerSubmit = questionId => {\n    if (newAnswer.trim() !== '') {\n      const updatedQuestions = questions.map(question => {\n        if (question.id === questionId) {\n          return {\n            ...question,\n            answers: [...question.answers, newAnswer]\n          };\n        }\n        return question;\n      });\n      setQuestions(updatedQuestions);\n      setNewAnswer('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"\\\\\"\n  }, void 0, false);\n};\n_s(CommunityPage, \"j2GN6eWbxy2AOIpSmoCbiEizIFI=\");\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","Form","Card","Badge","BsHeartFill","BsEyeFill","Footer","Fragment","_Fragment","jsxDEV","_jsxDEV","CommunityPage","_s","questions","setQuestions","id","question","likes","views","answers","newQuestion","setNewQuestion","newAnswer","setNewAnswer","handleQuestionSubmit","trim","newQuestionObj","length","handleAnswerSubmit","questionId","updatedQuestions","map","children","_c","$RefreshReg$"],"sources":["C:/Users/Arivani 1/Desktop/Ari/arivani/myapp/src/ui/Community.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Button, Form, Card, Badge } from 'react-bootstrap';\r\nimport { BsHeartFill, BsEyeFill } from 'react-icons/bs';\r\nimport Footer from '../components/Footer';\r\n\r\nconst CommunityPage = () => {\r\n  const [questions, setQuestions] = useState([\r\n    { id: 1, question: \"How to install React Bootstrap?\", likes: 10, views: 5, answers: [] },\r\n    { id: 2, question: \"What are the benefits of using React?\", likes: 15, views: 8, answers: [] },\r\n    { id: 3, question: \"How to implement sorting in React?\", likes: 8, views: 3, answers: [] }\r\n  ]);\r\n  const [newQuestion, setNewQuestion] = useState('');\r\n  const [newAnswer, setNewAnswer] = useState('');\r\n\r\n  const handleQuestionSubmit = () => {\r\n    if (newQuestion.trim() !== '') {\r\n      const newQuestionObj = {\r\n        id: questions.length + 1,\r\n        question: newQuestion,\r\n        likes: 0,\r\n        views: 0,\r\n        answers: []\r\n      };\r\n      setQuestions([...questions, newQuestionObj]);\r\n      setNewQuestion('');\r\n    }\r\n  };\r\n\r\n  const handleAnswerSubmit = (questionId) => {\r\n    if (newAnswer.trim() !== '') {\r\n      const updatedQuestions = questions.map(question => {\r\n        if (question.id === questionId) {\r\n          return {\r\n            ...question,\r\n            answers: [...question.answers, newAnswer]\r\n          };\r\n        }\r\n        return question;\r\n      });\r\n      setQuestions(updatedQuestions);\r\n      setNewAnswer('');\r\n    }\r\n  };\r\n\r\n  return (\r\n  <>\r\n  \\\r\n  </>\r\n   \r\n  );\r\n\r\n};\r\n\r\nexport default CommunityPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAChF,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CACzC;IAAEmB,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,iCAAiC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAG,CAAC,EACxF;IAAEJ,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,uCAAuC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAG,CAAC,EAC9F;IAAEJ,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,oCAAoC;IAAEC,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAG,CAAC,CAC3F,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM4B,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIJ,WAAW,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7B,MAAMC,cAAc,GAAG;QACrBX,EAAE,EAAEF,SAAS,CAACc,MAAM,GAAG,CAAC;QACxBX,QAAQ,EAAEI,WAAW;QACrBH,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE;MACX,CAAC;MACDL,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEa,cAAc,CAAC,CAAC;MAC5CL,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMO,kBAAkB,GAAIC,UAAU,IAAK;IACzC,IAAIP,SAAS,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3B,MAAMK,gBAAgB,GAAGjB,SAAS,CAACkB,GAAG,CAACf,QAAQ,IAAI;QACjD,IAAIA,QAAQ,CAACD,EAAE,KAAKc,UAAU,EAAE;UAC9B,OAAO;YACL,GAAGb,QAAQ;YACXG,OAAO,EAAE,CAAC,GAAGH,QAAQ,CAACG,OAAO,EAAEG,SAAS;UAC1C,CAAC;QACH;QACA,OAAON,QAAQ;MACjB,CAAC,CAAC;MACFF,YAAY,CAACgB,gBAAgB,CAAC;MAC9BP,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,oBACAb,OAAA,CAAAF,SAAA;IAAAwB,QAAA,EAAE;EAEF,gBAAE,CAAC;AAIL,CAAC;AAACpB,EAAA,CA9CID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}